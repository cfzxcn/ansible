name: {{ ansible_hostname }}
data-dir: /var/lib/etcd
wal-dir: /var/lib/etcd/wal
snapshot-count: 5000
heartbeat-interval: 100
election-timeout: 1000
quota-backend-bytes: 0
listen-peer-urls: "https://{{ ansible_default_ipv4.address }}:2380"
listen-client-urls: 'https://{{ ansible_default_ipv4.address }}:2379,http://127.0.0.1:2379'
max-snapshots: 3
max-wals: 5
cors:
initial-advertise-peer-urls: 'https://{{ ansible_default_ipv4.address }}:2380'
advertise-client-urls: 'https://{{ ansible_default_ipv4.address }}:2379'
discovery:
discovery-fallback: 'proxy'
discovery-proxy:
discovery-srv:
initial-cluster: 'c1=https://192.168.1.61:2380,c4=https://192.168.1.64:2380,c6=https://192.168.1.66:2380'
initial-cluster-token: 'etcd-k8s-cluster'
initial-cluster-state: 'new'
strict-reconfig-check: false
enable-v2: true
enable-pprof: true
proxy: 'off'
proxy-failure-wait: 5000
proxy-refresh-interval: 30000
proxy-dial-timeout: 1000
proxy-write-timeout: 5000
proxy-read-timeout: 0
client-transport-security:
  cert-file: '{{ kuberPath }}/ssl/etcd.pem'
  key-file: '{{ kuberPath }}/ssl/etcd-key.pem'
  client-cert-auth: true
  trusted-ca-file: '{{ kuberPath }}/ssl/ca.pem'
  auto-tls: true
peer-transport-security:
  cert-file: '{{ kuberPath }}/ssl/etcd.pem'
  key-file: '{{ kuberPath }}/ssl/etcd-key.pem'
  peer-client-cert-auth: true
  trusted-ca-file: '{{ kuberPath }}/ssl/ca.pem'
  auto-tls: true
debug: false
log-package-levels:
log-outputs: [default]
force-new-cluster: false

