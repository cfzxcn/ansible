- name: mkdir multi path for kubulet
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  loop:
    - /etc/cni/net.d
    - /opt/cni/net.d
    - /var/lib/kubelet
    - /etc/kubernetes/manifests
    - /etc/systemd/system/kubelet.service.d

- name: copy kubelet service and conf
  template:
    src: "kubernetes/{{ item.cfsrc }}.j2"
    dest: "{{ item.cfdest }}"
  loop:
    - { cfsrc: 'kubelet.service', cfdest: '/usr/lib/systemd/system/kubelet.service' }
    - { cfsrc: 'kubelet-conf.yml', cfdest: '{{ kuberPath }}/cfg/kubelet-conf.yml' }
    - { cfsrc: 'bootstrap.secret.yaml', cfdest: '{{ kuberPath }}/cfg/bootstrap.secret.yaml' }
#    bootstrap.secret.yaml其实只复制到master1就行

- name:
  block:
#########################################################################

    - name: kubectl create -f {{ kuberPath }}/cfg/bootstrap.secret.yaml
      shell: "kubectl create -f {{ kuberPath }}/cfg/bootstrap.secret.yaml"

# TLS Bootstrapping配置，创建bootstrap-kubelet.kubeconfig
# token的值是c1上：awk -F "," '{print $1}' /opt/kubernetes/ssl/token.csv 算出的
# token的位置在bootstrap.secret.yaml
    - name: kubectl config bootstrap set-cluster kubernetes
      shell: "kubectl config set-cluster kubernetes \
      --certificate-authority={{ kuberPath }}/ssl/ca.pem \
      --embed-certs=true --server={{ httpskvip }} \
      --kubeconfig={{ kuberPath }}/cfg/bootstrap-kubelet.kubeconfig"

    - name: kubectl config set-credentials tls-bootstrap-token-user
      shell: "kubectl config set-credentials tls-bootstrap-token-user \
      --token=c8ad9c.2e4d610cf3e7426e \
      --kubeconfig={{ kuberPath }}/cfg/bootstrap-kubelet.kubeconfig"

    - name: kubectl config set-context tls-bootstrap-token-user@kubernetes
      shell: "kubectl config set-context tls-bootstrap-token-user@kubernetes \
      --cluster=kubernetes --user=tls-bootstrap-token-user \
      --kubeconfig={{ kuberPath }}/cfg/bootstrap-kubelet.kubeconfig"
 
    - name: kubectl config use-context tls-bootstrap-token-user@kubernetes
      shell: "kubectl config use-context tls-bootstrap-token-user@kubernetes \
      --kubeconfig={{ kuberPath }}/cfg/bootstrap-kubelet.kubeconfig"

#########################################################################

#    - name: kubectl create clusterrolebinding tls-bootstrap-token-user --clusterrole=system:node-bootstrapper --user=tls-bootstrap-token-user
#      shell: "kubectl create clusterrolebinding cluster-system-anonymous \
#      --clusterrole=cluster-admin --user=kubelet-bootstrap"
#
#    - name: kubectl create clusterrolebinding tls-bootstrap-token-user --clusterrole=system:node-bootstrapper --user=tls-bootstrap-token-user
#      shell: "kubectl create clusterrolebinding kubelet-bootstrap \
#      --clusterrole=system:node-bootstrapper --user=kubelet-bootstrap \
#      --kubeconfig={{ kuberPath }}/cfg/kubelet-bootstrap.kubeconfig"
# 验证方法：
# kubectl describe clusterrolebinding cluster-system-anonymous
# kubectl describe clusterrolebinding kubelet-bootstrap
##############################################################
    - name: Copy {{ kuberPath }}/cfg/bootstrap-kubelet.kubeconfig  to other master node
      shell: "for i in 4 6 7 8;do rsync -az {{ kuberPath }}/cfg/bootstrap-kubelet.kubeconfig c$i:{{ kuberPath }}/cfg;done"

  when: ansible_hostname == 'c1'

- name: Start kubelet and daemon-reload
  ansible.builtin.systemd:
    state: restarted
    enabled: true
    daemon_reload: true
    name: "kubelet.service"

