- name: Install nginx dependence
  yum: name=gcc,gcc-c++,make,openssl-devel,pcre-devel,zlib-devel,wget state=latest
  tags: dep

- name: Download nginx-{{ ngVer }}
  get_url: url=http://nginx.org/download/nginx-{{ ngVer }}.tar.gz dest=/tmp

- name: Unarchive nginx-{{ ngVer }}.tar.gz
  unarchive:
    src: /tmp/nginx-{{ ngVer }}.tar.gz
    dest: /tmp
    copy: no
  ignore_errors: true

- name: create ngixn group
  shell: group_count=$(grep -w nginx /etc/group | wc -l) && [ ${group_count} -eq 0 ] && groupadd -r nginx || break

- name: create ngixn user
  shell: user_count=$(grep -w nginx /etc/passwd | wc -l) && [ ${user_count} -eq 0 ] && useradd -r -g nginx -s /sbin/nologin -M nginx || break

- name: configure make make install nginx
  shell: cd /tmp/nginx-{{ ngVer }} && ./configure --prefix="{{ ngInstallDir }}" --conf-path="{{ ngInstallDir }}"/conf/nginx.conf --user=nginx --group=nginx --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/lock/nginx.lock --with-http_ssl_module --with-http_gzip_static_module --with-debug --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_random_index_module --with-http_secure_link_module --with-http_auth_request_module --with-threads --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-http_slice_module --with-file-aio --with-http_v2_module && make -j$(nproc) && make install -j$(nproc)

- name: copy index.html to client
  block:
    - template:
        src: index.html.j2
        dest: "{{ ngInstallDir }}/html/index.html"
        backup: yes
# 上三行必须要缩进，否则报错
    - shell: "echo '<?php phpinfo();' > {{ ngInstallDir }}/html/phpinfo.php"
#- name: ls default.conf
#  shell: ls "{{ ngInstallDir }}"/conf.d/default.conf.original
#  register: original
#  ignore_errors: true
#
#- name: mv default.conf
#  shell: mv "{{ ngInstallDir }}"/conf.d/default.conf{,.original}
#  when: original is failure
- name: Set nginx PATH
  shell: echo "export PATH={{ ngInstallDir }}/sbin:$PATH" > /etc/profile.d/nginx.sh && source /etc/profile.d/nginx.sh

- name: Generate /usr/lib/systemd/system/nginx.service
  template:
    src: nginx.service.j2
    dest: /usr/lib/systemd/system/nginx.service
  
- name: Generate nignx.conf to client
  template:
    src: nginx.conf.j2
    dest: "{{ ngInstallDir }}/conf/nginx.conf"

- name: mkdir {{ ngInstallDir }}/conf.d
  file: "path={{ ngInstallDir }}/conf/conf.d state=directory"

- name: Generate "{{ ngInstallDir }}/conf/conf.d/st.conf" to client
  template:
    src: ng.conf.j2
    dest: "{{ ngInstallDir }}/conf/conf.d/st.conf"
  notify: restart nginx

- name: start nginx service
  service: name=nginx state=started enabled=yes
#  shell: "{{ ngInstallDir }}/sbin/nginx"
#    name: nginx
#    state: started
#    enabled: yes
#      - shell: /usr/sbin/nginx
#        args:
#          creates: /run/nginx.pid
# 执行一个判断，当/run/nginx.pid存在时，就不再执行/usr/sbin/nginx
